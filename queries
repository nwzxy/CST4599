#Query to find the number of requests that returned an error response and corresponding HTTP status code
SELECT count(client_request), status_code FROM http_logs
WHERE status_code >= 200
GROUP BY status_code ORDER BY status_code DESC;

SELECT count(client_request), status_code FROM http_logs
WHERE status_code != 200
ORDER BY status_code DESC
LIMIT 5;

---------------------------------------------
Final set of Queries
---------------------------------------------

#Query 1: to find the total count of records
SELECT COUNT(*) FROM http_logs_csv_1GB;

#Query 2: to find the most frequently requested resource and their count in a descending order (LIMIT 5 shows top 5 results)
SELECT endpoint, COUNT(*) AS page_view_count FROM http_logs_csv_15gb
GROUP BY endpoint
ORDER BY page_view_count DESC
LIMIT 5;

#Query 3: to Identify types of errors (error codes greater than 400 are errors) and their count
SELECT status, count(status) AS distinct_status FROM http_logs_csv_15gb WHERE status >= '400'
GROUP BY status
ORDER BY distinct_status DESC;

#Query 4: to identify the requests for a resource that has returned majority of the errors
SELECT endpoint, count(endpoint) AS count_of_requests FROM http_logs_csv_15gb WHERE status >= '400' 
GROUP BY endpoint 
ORDER BY count_of_requests DESC 
LIMIT 5;

#Query 5: find the resource, timestamp and size of a resource (in MB) that has been requested in descending order
SELECT DISTINCT(endpoint), date_time, ROUND((object_size * 0.000001)) AS size_in_mb FROM http_logs_csv_1gb ORDER BY size_in_mb desc LIMIT 20;


---------------------------------------------

## ORC table queries

#Query 1 : to find the total count of records
SELECT COUNT(*) FROM http_logs_csv_orc_1GB;

#Query 2: to find the most frequently requested resource and their count in a descending order (LIMIT 5 shows top 5 results)
SELECT endpoint, COUNT(*) AS page_view_count FROM http_logs_csv_orc_15gb
GROUP BY endpoint
ORDER BY page_view_count DESC
LIMIT 5;

#Query 3: to Identify types of errors (error codes greater than 400 are errors) and their count
SELECT status, count(status) AS distinct_status FROM http_logs_csv_orc_15gb WHERE status >= '400'
GROUP BY status
ORDER BY distinct_status DESC;

#Query 4: to identify the requests for a resource that has returned majority of the errors
SELECT endpoint, count(endpoint) AS count_of_requests FROM http_logs_csv_orc_15gb WHERE status >= '400' 
GROUP BY endpoint 
ORDER BY count_of_requests DESC 
LIMIT 5;

#Query 5:
SELECT DISTINCT(endpoint), date_time, ROUND((object_size * 0.000001)) AS size_in_mb FROM http_logs_csv_orc_5gb ORDER BY size_in_mb desc LIMIT 20;

---------------------------------------------

## Parquet table queries

#Query 1 : to find the total count of records
SELECT COUNT(*) FROM http_logs_csv_prq_15GB;

#Query 2: to find the most frequently requested resource and their count in a descending order (LIMIT 5 shows top 5 results)
SELECT endpoint, COUNT(*) AS page_view_count FROM http_logs_csv_prq_15gb
GROUP BY endpoint
ORDER BY page_view_count DESC
LIMIT 5;

#Query 3: to Identify types of errors (error codes greater than 400 are errors) and their count
SELECT status, count(status) AS distinct_status FROM http_logs_csv_prq_15gb WHERE status >= '400'
GROUP BY status
ORDER BY distinct_status DESC;

#Query 4: to identify the requests for a resource that has returned majority of the errors
SELECT endpoint, count(endpoint) AS count_of_requests FROM http_logs_csv_prq_15gb WHERE status >= '400' 
GROUP BY endpoint 
ORDER BY count_of_requests DESC 
LIMIT 5;

#Query 5:
SELECT DISTINCT(endpoint), date_time, ROUND((object_size * 0.000001)) AS SIZE_IN_MB FROM http_logs_csv_prq_15gb 
ORDER BY SIZE_IN_MB DESC 
LIMIT 10;